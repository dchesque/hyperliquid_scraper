events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    sendfile on;
    keepalive_timeout 65;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 '{"status": "ok", "service": "hyperliquid-scraper", "timestamp": "$time_iso8601"}';
            add_header Content-Type application/json;
        }

        # Status dashboard
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Logs endpoint (for debugging)
        location /logs/ {
            alias /usr/share/nginx/html/logs/;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
        }

        # Exports endpoint
        location /exports/ {
            alias /usr/share/nginx/html/exports/;
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
        }

        # API status endpoint
        location /api/status {
            access_log off;
            return 200 '{"scraper": "running", "last_check": "$time_iso8601", "version": "2.0"}';
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
        }

        # Metrics endpoint (simple)
        location /metrics {
            access_log off;
            return 200 'hyperliquid_scraper_up 1\nhyperliquid_scraper_last_check_timestamp $msec\n';
            add_header Content-Type text/plain;
        }
    }
}